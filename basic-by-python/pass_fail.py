# 100개의 트레이닝 데이터와 실제 데이터로 평균 60점 이상이면 합불을 예측 해 봄
import pandas as pd
import numpy as np
from sklearn import svm, metrics

# 실제 데이터
traning_data = [
    [57, 84, 1, 70.5],
    [98, 36, 1, 67],
    [42, 49, 0, 45.5],
    [96, 55, 1, 75.5],
    [94, 12, 0, 53],
    [25, 11, 0, 18],
    [33, 95, 1, 64],
    [29, 89, 0, 59],
    [4, 42, 0, 23],
    [65, 20, 0, 42.5],
    [64, 47, 0, 55.5],
    [84, 89, 1, 86.5],
    [66, 32, 0, 49],
    [83, 71, 1, 77],
    [91, 78, 1, 84.5],
    [35, 84, 0, 59.5],
    [76, 32, 0, 54],
    [72, 43, 0, 57.5],
    [32, 8, 0, 20],
    [87, 61, 1, 74],
    [69, 63, 1, 66],
    [29, 11, 0, 20],
    [57, 96, 1, 76.5],
    [92, 52, 1, 72],
    [44, 85, 1, 64.5],
    [97, 18, 0, 57.5],
    [76, 86, 1, 81],
    [14, 84, 0, 49],
    [10, 16, 0, 13],
    [73, 43, 0, 58],
    [19, 76, 0, 47.5],
    [21, 14, 0, 17.5],
    [31, 15, 0, 23],
    [22, 98, 1, 60],
    [22, 83, 0, 52.5],
    [82, 49, 1, 65.5],
    [10, 98, 0, 54],
    [61.5, 61.5, 1, 61.5],
    [42, 61, 0, 51.5],
    [47, 48, 0, 47.5],
    [96, 13, 0, 54.5],
    [35, 50, 0, 42.5],
    [72, 40, 0, 56],
    [6, 89, 0, 47.5],
    [98, 14, 0, 56],
    [8, 45, 0, 26.5],
    [32, 4, 0, 18],
    [72, 89, 1, 80.5],
    [1, 32, 0, 16.5],
    [83, 94, 1, 88.5],
    [40, 43, 0, 41.5],
    [86, 91, 1, 88.5],
    [68, 17, 0, 42.5],
    [28, 76, 0, 52],
    [51, 29, 0, 40],
    [98, 37, 1, 67.5],
    [46, 71, 0, 58.5],
    [67, 30, 0, 48.5],
    [9, 4, 0, 6.5],
    [5, 62, 0, 33.5],
    [78, 72, 1, 75],
    [52, 5, 0, 28.5],
    [0, 10, 0, 5],
    [70, 35, 0, 52.5],
    [88, 28, 0, 58],
    [12, 4, 0, 8],
    [53, 32, 0, 42.5],
    [39, 15, 0, 27],
    [11, 0, 0, 5.5],
    [41, 61, 0, 51],
    [39, 35, 0, 37],
    [75, 47, 1, 61],
    [97, 29, 1, 63],
    [32, 45, 0, 38.5],
    [40, 92, 1, 66],
    [2, 42, 0, 22],
    [30, 33, 0, 31.5],
    [83, 74, 1, 78.5],
    [4, 54, 0, 29],
    [6, 91, 0, 48.5],
    [26, 78, 0, 52],
    [14, 79, 0, 46.5],
    [10, 7, 0, 8.5],
    [41, 15, 0, 28],
    [2, 47, 0, 24.5],
    [83, 70, 1, 76.5],
    [99, 5, 0, 52],
    [48, 58, 0, 53],
    [39, 41, 0, 40],
    [85, 69, 1, 77],
    [57, 84, 1, 70.5],
    [73, 72, 1, 72.5],
    [81, 88, 1, 84.5],
    [69, 29, 0, 49],
    [39, 94, 1, 66.5],
    [40, 43, 0, 41.5],
    [29, 58, 0, 43.5],
    [17, 49, 0, 33],
    [87, 4, 0, 45.5],
    [28, 65, 0, 46.5],
    [36, 8, 0, 22]
]

pf_dataframe = pd.DataFrame(traning_data)  # pandas dataframe -> 2차원의 자료구조로 만듬 (행렬)
pf_data = pf_dataframe.ix[:, 0:1] / 100 # 모든행에 대해서, [0]~[1] -> data
pf_label = pf_dataframe.ix[:, 2]  # 모든행에 대해서 [2] -> label
clf = svm.SVC()
clf.fit(pf_data, pf_label)

# test용 데이터
test_data = [
    [56, 52, 0, 54],
    [76, 62, 1, 69],
    [50, 60, 0, 55],
    [2, 89, 0, 45.5],
    [11, 91, 0, 51],
    [81, 27, 0, 54],
    [28, 98, 1, 63],
    [42, 2, 0, 22],
    [13, 92, 0, 52.5],
    [67, 95, 1, 81],
    [26, 70, 0, 48],
    [51, 82, 1, 66.5],
    [17, 58, 0, 37.5],
    [26, 77, 0, 51.5],
    [68, 15, 0, 41.5],
    [7, 56, 0, 31.5],
    [98, 92, 1, 95],
    [30, 30, 0, 30],
    [66, 96, 1, 81],
    [88, 84, 1, 86],
    [34, 97, 1, 65.5],
    [62, 26, 0, 44],
    [35, 93, 1, 64],
    [73, 92, 1, 82.5],
    [88, 90, 1, 89],
    [45, 2, 0, 23.5],
    [57, 49, 0, 53],
    [79, 64, 1, 71.5],
    [45, 13, 0, 29],
    [90, 59, 1, 74.5],
    [34, 76, 0, 55],
    [39, 31, 0, 35],
    [79, 32, 0, 55.5],
    [30, 77, 0, 53.5],
    [41, 33, 0, 37],
    [25, 90, 0, 57.5],
    [38, 81, 0, 59.5],
    [99, 57, 1, 78],
    [53, 10, 0, 31.5],
    [70, 39, 0, 54.5],
    [89, 47, 1, 68],
    [79, 39, 0, 59],
    [40, 81, 1, 60.5],
    [52, 6, 0, 29],
    [53, 49, 0, 51],
    [49, 35, 0, 42],
    [18, 32, 0, 25],
    [28, 9, 0, 18.5],
    [19, 32, 0, 25.5],
    [66, 65, 1, 65.5],
    [17, 51, 0, 34],
    [48, 75, 1, 61.5],
    [21, 73, 0, 47],
    [84, 14, 0, 49],
    [8, 49, 0, 28.5],
    [77, 14, 0, 45.5],
    [22, 99, 1, 60.5],
    [5, 33, 0, 19],
    [92, 54, 1, 73],
    [4, 13, 0, 8.5],
    [29, 35, 0, 32],
    [89, 46, 1, 67.5],
    [51, 76, 1, 63.5],
    [22, 97, 0, 59.5],
    [34, 38, 0, 36],
    [90, 42, 1, 66],
    [94, 60, 1, 77],
    [6, 88, 0, 47],
    [70, 4, 0, 37],
    [80, 70, 1, 75],
    [78, 63, 1, 70.5],
    [21, 38, 0, 29.5],
    [7, 32, 0, 19.5],
    [84, 57, 1, 70.5],
    [67, 17, 0, 42],
    [33, 26, 0, 29.5],
    [33, 83, 0, 58],
    [45, 21, 0, 33],
    [62, 75, 1, 68.5],
    [21, 52, 0, 36.5],
    [7, 91, 0, 49],
    [83, 52, 1, 67.5],
    [15, 49, 0, 32],
    [96, 59, 1, 77.5],
    [64, 85, 1, 74.5],
    [11, 71, 0, 41],
    [13, 76, 0, 44.5],
    [78, 64, 1, 71],
    [13, 45, 0, 29],
    [36, 3, 0, 19.5],
    [1, 85, 0, 43],
    [94, 92, 1, 93],
    [68, 3, 0, 35.5],
    [62, 26, 0, 44],
    [59, 51, 0, 55],
    [97, 23, 1, 60],
    [82, 49, 1, 65.5],
    [43, 63, 0, 53],
    [78, 46, 1, 62],
    [11, 20, 0, 15.5],
    [96, 15, 0, 55.5],
    [86, 50, 1, 68],
    [79, 36, 0, 57.5]
]

test_dataframe = pd.DataFrame(test_data)  # pandas dataframe -> 2차원의 자료구조로 만듬 (행렬)
test_feature = test_dataframe.ix[:, 0:1] / 100 # 모든행에 대해서, [0]~[1] -> data
test_label = test_dataframe.ix[:, 2]  # 모든행에 대해서 [2] -> label
test_score = test_dataframe.ix[:, 3]  # 모든행에 대해서 [2] -> label

pre = clf.predict(test_feature)

for i in range(test_label.shape[0]):
    print(test_label[i]," / ", pre[i], "/ ", test_label[i] == pre[i],"/", test_score[i])

ac_score = metrics.accuracy_score(test_label, pre)
print("정답율 : {0:.2f}%".format(ac_score*100))